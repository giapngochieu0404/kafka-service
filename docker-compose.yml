version: "3"
services:
  zookeeper:
      image: confluentinc/cp-zookeeper:7.2.1
      container_name: zookeeper
      user: root
      ports:
          - "2181:2181"
      environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      volumes:
        - /kafka/zookeeper-data:/var/lib/zookeeper/data
        - /kafka/zookeeper-log:/var/lib/zookeeper/log

  kafka1:
      image: confluentinc/cp-kafka:7.2.1
      container_name: kafka1
      user: root
      ports:
          - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_NUM_PARTITIONS: 6
        KAFKA_DEFAULT_REPLICATION_FACTOR: 3
        KAFKA_DELETE_TOPIC_ENABLE: "true"
      volumes:
          - /kafka/kafka1-data:/var/lib/kafka/data
      depends_on:
        - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka2
    user: root
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - /kafka/kafka2-data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafka3:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka3
    user: root
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - /kafka/kafka3-data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry
    platform: linux/amd64
    hostname: schema-registry
    user: root
    container_name: schema-registry
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8889:8889"
    volumes:
      - ./schema-registry.properties:/etc/schema-registry/schema-registry.properties
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9093,kafka3:9094'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8889

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    user: root
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9093,kafka3:9094"
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8889
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8889
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
    volumes:
      - /kafka/kafka-connect-config:/etc/kafka-connect
    networks:
      - "network-connect"
    depends_on:
      - zookeeper
      - schema-registry
    restart: unless-stopped
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:1.7.0
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:11.1.3
        confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:2.0.0
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - zookeeper
      - schema-registry
      - kafka-connect
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "lab-cluster-hieugn"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9092,kafka2:9093,kafka3:9094"
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8889
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: local
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
    restart: unless-stopped
networks:
  network-connect:
    external: true